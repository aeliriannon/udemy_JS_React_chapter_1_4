'use strict';

// console.log(1); //1

// setTimeout(() => {
//     console.log('timeout'); //3
// }, 2000);

// setTimeout(() => {
//     console.log('timeout_4000'); //4
// }, 4000);

// console.log(2); //2

//call stack - операции, которые происходят сейчас
//web api - хранение промежуточных операий,(например операция которая запустилась, но должна выполниться, черз 5 секунд)
//callback queue - очередь операций на выполнение

// let k = 0;

// function count() {
//     for (let i = 0; i < 1e9; i++) {
//         k++;
//     }
//     alert('done');
// }

// count();

// =========================

setTimeout(() => {
    console.log(1);
}, 0); // а только потом выведется 1

console.log(2); //сначала выведется 2

//сначала выполнится синхронный код, а потом уже асинхронный
//на асинхронный код, даже у которого 0 выставлено, программные 4милисекунды даются