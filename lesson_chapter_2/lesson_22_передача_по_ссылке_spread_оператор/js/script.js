"use strict";  // используется для обозначения того, что код пишем в новом формате, пишев в верху главного документа

// let a = 5,
//     b = a;
//
// b = b + 5;   //предполагаем, что 5+5 = 10
// console.log(b);  //выводим b - получаем 10
// console.log(a);  //выводим a - получаем 5
//
// const obj = {  //создаем объект
//     a: 5,
//     b: 1
// };
//
// const copy = obj; //создаем объект, который копирует объект obj

// copy.a = 10;  //для ключа a меняем значение 5 на 10
// console.log(copy);  // предполагаем, что выведет объект как obj в котором вместо 5, будет 10
// console.log(obj);  // предполагаем, что выведет объект obj без изменений, а выводит !!! a=10, b = 1, тоесть тоже изменился

// function copy(mainObj) {    //создаем функцию для копирования обоъекта(поверхносная копия), которая принимает, как аргумент какой то объект
//
//     let objCopy = {};  // создаем пустой объект, в который будем копировать нащ основной объект
//
//     let key;  //создаем переменную для ключей объекта, которые будет перебирать for in
//     for(key in mainObj) {  //цикл для перебора ключей в объекте
//         objCopy[key] = mainObj[key];   //записываем в наш пустой объект те же свойства, что во входящем объекте
//
//     }
//
//     return objCopy;  //ВОЗВРАЩАЕМ НАШ ОБЪЕКТ НАРУЖУ
// }
//
//
// const numbers = {   //сохдаем объект
//     a: 2,
//     b : 5,
//     c : {
//         x: 7,
//         y: 4
//     }
// };
//
// const newNumbers = copy(numbers);   // создаем новый объект, который копирует(клонирует) в себя объект numbers
//
// newNumbers.a = 10;  //меняем значение ключа a  в новом объекте
//
// console.log(numbers); // выведет старый объект без изменений, но вложенный объект будет ссылкой
// console.log(newNumbers);  // выведет новый объект, копию старого, но уже с изменениями
//
// const add = {
//     d: 17,
//     e: 20
// };
//
// console.log(Object.assign(numbers, add)); // выводим в консоль объект numbers , в который добавлен объект add
// //Object.assign(a, b); добавляет в объект a объект b
//
// const clone = console.log(Object.assign({}, add)); //создаем новый объект clone, который полностью копирует объект add

// const oldArray = ['a', 'b', 'c'];
// const newArray = oldArray.slice(); // копируем oldArray в новый массив (поверхностное копирование)
//
// newArray[2] = 'jdfhdfkhj'; // меняем значение третьего элемента в новом массиве
//
// console.log(newArray);
// console.log(oldArray);
//
// const video = ['youtube', 'vimeo', 'rutube'],  // создаем массив
//       blogs = ['wordpress', 'livjournal', 'blogger'], // создаем массив
//     internet = [...video, ...blogs, 'wk', 'facebook']; // создаем массив, который включает в себя первые два массива + дополнительные элементы(поверхностное копирование) оператор spread
//
// console.log(internet);

const array = ['a', 'b'];

const twoArray = [...array]; // копируем массив, используя оператор spread

const oneObj = {
    one: 1,
    two: 2
};

const twoObj = {...oneObj};   // копируем объект, используя оператор spread

console.log(twoObj);